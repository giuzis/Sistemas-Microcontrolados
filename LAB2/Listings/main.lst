


ARM Macro Assembler    Page 1 


    1 00000000         ; main.s
    2 00000000         ; Desenvolvido para a placa EK-TM4C1294XL
    3 00000000         ; Prof. Guilherme Peron
    4 00000000         ; Ver 1 19/03/2018
    5 00000000         ; Ver 2 26/08/2018
    6 00000000         ; Este programa deve esperar o usuário pressionar uma ch
                       ave.
    7 00000000         ; Caso o usuário pressione uma chave, um LED deve piscar
                        a cada 1 segundo.
    8 00000000         
    9 00000000         ; ------------------------------------------------------
                       -------------------------
   10 00000000                 THUMB                        ; Instruções do tip
                                                            o Thumb-2
   11 00000000         ; ------------------------------------------------------
                       -------------------------
   12 00000000         
   13 00000000         ; Declarações EQU - Defines
   14 00000000         ; Declarações EQU - Defines
   15 00000000 0000000F 
                       PQ0     EQU              2_00001111
   16 00000000 00000006 
                       PQ1     EQU              2_00000110
   17 00000000 0000000B 
                       PQ2     EQU              2_00001011
   18 00000000 0000000F 
                       PQ3     EQU              2_00001111
   19 00000000 00000006 
                       PQ4     EQU              2_00000110
   20 00000000 0000000D 
                       PQ5     EQU              2_00001101
   21 00000000 0000000D 
                       PQ6     EQU              2_00001101
   22 00000000 00000007 
                       PQ7     EQU              2_00000111
   23 00000000 0000000F 
                       PQ8     EQU              2_00001111
   24 00000000 0000000F 
                       PQ9     EQU              2_00001111
   25 00000000         
   26 00000000 00000030 
                       PA0     EQU              2_00110000
   27 00000000 00000000 
                       PA1     EQU              2_00000000
   28 00000000 00000050 
                       PA2     EQU              2_01010000
   29 00000000 00000040 
                       PA3     EQU              2_01000000
   30 00000000 00000060 
                       PA4     EQU              2_01100000
   31 00000000 00000060 
                       PA5     EQU              2_01100000
   32 00000000 00000070 
                       PA6     EQU              2_01110000
   33 00000000 00000000 
                       PA7     EQU              2_00000000
   34 00000000 00000070 
                       PA8     EQU              2_01110000
   35 00000000 00000060 



ARM Macro Assembler    Page 2 


                       PA9     EQU              2_01100000
   36 00000000         
   37 00000000         ; ========================
   38 00000000         ; Definições de Valores
   39 00000000         ; ------------------------------------------------------
                       -------------------------
   40 00000000         ; Área de Dados - Declarações de variáveis
   41 00000000                 AREA             DATA, ALIGN=2
   42 00000000         ; Se alguma variável for chamada em outro arquivo
   43 00000000         ;EXPORT  <var> [DATA,SIZE=<tam>]   ; Permite chamar a va
                       riável <var> a 
   44 00000000         ; partir de outro arquivo
   45 00000000         ;<var> SPACE <tam>                        ; Declara uma 
                       variável de nome <var>
   46 00000000         ; de <tam> bytes a partir da primeira 
   47 00000000         ; posição da RAM  
   48 00000000         
   49 00000000         ; ------------------------------------------------------
                       -------------------------
   50 00000000         ; Área de Código - Tudo abaixo da diretiva a seguir será
                        armazenado na memória de 
   51 00000000         ;                  código
   52 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   53 00000000         
   54 00000000         ; Se alguma função do arquivo for chamada em outro arqui
                       vo 
   55 00000000                 EXPORT           Start       ; Permite chamar a 
                                                            função Start a part
                                                            ir de 
   56 00000000         ; outro arquivo. No caso startup.s
   57 00000000         
   58 00000000         ; Se chamar alguma função externa 
   59 00000000         ;IMPORT <func>              ; Permite chamar dentro dest
                       e arquivo uma 
   60 00000000         ; função <func>
   61 00000000                 IMPORT           PLL_Init
   62 00000000                 IMPORT           SysTick_Init
   63 00000000                 IMPORT           SysTick_Wait1ms
   64 00000000                 IMPORT           GPIO_Init
   65 00000000                 IMPORT           PortK_Output
   66 00000000                 IMPORT           PortQ_Output
   67 00000000                 IMPORT           PortB_Output
   68 00000000                 IMPORT           PortM_Output
   69 00000000                 IMPORT           PortJ_Input
   70 00000000         
   71 00000000         
   72 00000000         ; ------------------------------------------------------
                       -------------------------
   73 00000000         ; Função main()
   74 00000000         Start
   75 00000000 F7FF FFFE       BL               PLL_Init    ;Chama a subrotina 
                                                            para alterar o cloc
                                                            k do microcontrolad
                                                            or para 80MHz
   76 00000004 F7FF FFFE       BL               SysTick_Init ;Chama a subrotina
                                                             para inicializar o
                                                             SysTick
   77 00000008 F7FF FFFE       BL               GPIO_Init   ;Chama a subrotina 



ARM Macro Assembler    Page 3 


                                                            que inicializa os G
                                                            PIO
   78 0000000C F000 F801       BL               Inicializa_LCD
   79 00000010         
   80 00000010         fim
   81 00000010 E7FE            B                fim
   82 00000012         
   83 00000012         ;-------------------------------------------------------
                       -------------------------
   84 00000012         ; Função Inicializa_LCD
   85 00000012         ; Parâmetro de entrada: Não tem
   86 00000012         ; Parâmetro de saída: Não tem
   87 00000012         
   88 00000012         Inicializa_LCD
   89 00000012 B500            PUSH             {LR}
   90 00000014 F04F 000F       MOV              R0, #15     ; espera por 15ms
   91 00000018 F7FF FFFE       BL               SysTick_Wait1ms
   92 0000001C         
   93 0000001C F04F 0000       MOV              R0, #2_00000000 ; RS = 0, RW = 
                                                            0, EN = 0
   94 00000020 F7FF FFFE       BL               PortM_Output ; limpa os pinos d
                                                            e comando
   95 00000024         
   96 00000024 F04F 0038       MOV              R0, #0x38
   97 00000028 F000 F80F       BL               Instrucoes_LCD
   98 0000002C         
   99 0000002C         ; MOV R0, #0x38
  100 0000002C         ; BL Instrucoes_LCD
  101 0000002C         
  102 0000002C F04F 0006       MOV              R0, #0x06
  103 00000030 F000 F80B       BL               Instrucoes_LCD
  104 00000034         
  105 00000034 F04F 000F       MOV              R0, #0x0F
  106 00000038 F000 F807       BL               Instrucoes_LCD
  107 0000003C         
  108 0000003C F04F 0001       MOV              R0, #0x01
  109 00000040 F000 F803       BL               Instrucoes_LCD
  110 00000044         
  111 00000044 F85D EB04       POP              {LR}
  112 00000048 4770            BX               LR
  113 0000004A         
  114 0000004A         ;-------------------------------------------------------
                       -------------------------
  115 0000004A         ; Função Instruções_LCD
  116 0000004A         ; Parâmetro de entrada: R0 -> Código de instrução
  117 0000004A         ; Parâmetro de saída: Não tem
  118 0000004A         
  119 0000004A         Instrucoes_LCD
  120 0000004A         
  121 0000004A B500            PUSH             {LR}
  122 0000004C         
  123 0000004C F7FF FFFE       BL               PortK_Output ; escreve comando 
                                                            no barramento de da
                                                            dos
  124 00000050         
  125 00000050 F04F 0004       MOV              R0, #2_00000100 ; RS = 0, RW = 
                                                            0, EN = 1
  126 00000054 F7FF FFFE       BL               PortM_Output ; ativa enable par
                                                            a que o comando sej



ARM Macro Assembler    Page 4 


                                                            a executado
  127 00000058 F04F 000A       MOV              R0, #10     ; espera por 10ms a
                                                            té que o LCD esteja
                                                             pronto
  128 0000005C F7FF FFFE       BL               SysTick_Wait1ms
  129 00000060         
  130 00000060 F04F 0000       MOV              R0, #2_00000000 ; RS = 0, RW = 
                                                            0, EN = 0
  131 00000064 F7FF FFFE       BL               PortM_Output ; desativa enable 
                                                            após utilização
  132 00000068         
  133 00000068 F85D EB04       POP              {LR}
  134 0000006C 4770            BX               LR
  135 0000006E         
  136 0000006E         ;-------------------------------------------------------
                       -------------------------
  137 0000006E         ; Função Escrita_LCD
  138 0000006E         ; Parâmetro de entrada: R0 -> Dado a ser enviado
  139 0000006E         ; Parâmetro de saída: Não tem
  140 0000006E         
  141 0000006E         Escrita_LCD
  142 0000006E B500            PUSH             {LR}
  143 00000070         
  144 00000070 F7FF FFFE       BL               PortK_Output ; escreve o dado n
                                                            o barramento
  145 00000074         
  146 00000074 F04F 0005       MOV              R0, #2_00000101 ; RS = 1, RW = 
                                                            0, EN = 1
  147 00000078 F7FF FFFE       BL               PortM_Output ; ativa enable e R
                                                            S para que o dado s
                                                            eja escrito
  148 0000007C F04F 000A       MOV              R0, #10     ; espera por 10ms a
                                                            té que o LCD esteja
                                                             pronto
  149 00000080 F7FF FFFE       BL               SysTick_Wait1ms
  150 00000084         
  151 00000084 F04F 0000       MOV              R0, #2_00000000 ; RS = 0, RW = 
                                                            0, EN = 0
  152 00000088 F7FF FFFE       BL               PortM_Output ; desativa enable 
                                                            após utilização
  153 0000008C         
  154 0000008C F85D EB04       POP              {LR}
  155 00000090 4770            BX               LR
  156 00000092         
  157 00000092         ; ------------------------------------------------------
                       --------------------------------------------------------
                       -----------
  158 00000092         ; Fim do Arquivo
  159 00000092         ; ------------------------------------------------------
                       --------------------------------------------------------
                       ----------- 
  160 00000092 00 00           ALIGN                        ;Garante que o fim 
                                                            da seção está alinh
                                                            ada 
  161 00000094                 END                          ;Fim do arquivo
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4.fp --apcs=int
erwork --depend=.\objects\main.d -o.\objects\main.o -I.\RTE\_Target_1 -IC:\Keil
_v5\ARM\PACK\Keil\TM4C_DFP\1.1.0\Device\Include\TM4C129 -IC:\Keil_v5\ARM\CMSIS\
Include --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 526" --



ARM Macro Assembler    Page 5 


predefine="TM4C1294NCPDT SETA 1" --list=.\listings\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 41 in file main.s
   Uses
      None
Comment: DATA unused
1 symbol



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 52 in file main.s
   Uses
      None
Comment: .text unused
Escrita_LCD 0000006E

Symbol: Escrita_LCD
   Definitions
      At line 141 in file main.s
   Uses
      None
Comment: Escrita_LCD unused
Inicializa_LCD 00000012

Symbol: Inicializa_LCD
   Definitions
      At line 88 in file main.s
   Uses
      At line 78 in file main.s
Comment: Inicializa_LCD used once
Instrucoes_LCD 0000004A

Symbol: Instrucoes_LCD
   Definitions
      At line 119 in file main.s
   Uses
      At line 97 in file main.s
      At line 103 in file main.s
      At line 106 in file main.s
      At line 109 in file main.s

Start 00000000

Symbol: Start
   Definitions
      At line 74 in file main.s
   Uses
      At line 55 in file main.s
Comment: Start used once
fim 00000010

Symbol: fim
   Definitions
      At line 80 in file main.s
   Uses
      At line 81 in file main.s
Comment: fim used once
6 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

PA0 00000030

Symbol: PA0
   Definitions
      At line 26 in file main.s
   Uses
      None
Comment: PA0 unused
PA1 00000000

Symbol: PA1
   Definitions
      At line 27 in file main.s
   Uses
      None
Comment: PA1 unused
PA2 00000050

Symbol: PA2
   Definitions
      At line 28 in file main.s
   Uses
      None
Comment: PA2 unused
PA3 00000040

Symbol: PA3
   Definitions
      At line 29 in file main.s
   Uses
      None
Comment: PA3 unused
PA4 00000060

Symbol: PA4
   Definitions
      At line 30 in file main.s
   Uses
      None
Comment: PA4 unused
PA5 00000060

Symbol: PA5
   Definitions
      At line 31 in file main.s
   Uses
      None
Comment: PA5 unused
PA6 00000070

Symbol: PA6
   Definitions
      At line 32 in file main.s
   Uses
      None
Comment: PA6 unused
PA7 00000000

Symbol: PA7



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

   Definitions
      At line 33 in file main.s
   Uses
      None
Comment: PA7 unused
PA8 00000070

Symbol: PA8
   Definitions
      At line 34 in file main.s
   Uses
      None
Comment: PA8 unused
PA9 00000060

Symbol: PA9
   Definitions
      At line 35 in file main.s
   Uses
      None
Comment: PA9 unused
PQ0 0000000F

Symbol: PQ0
   Definitions
      At line 15 in file main.s
   Uses
      None
Comment: PQ0 unused
PQ1 00000006

Symbol: PQ1
   Definitions
      At line 16 in file main.s
   Uses
      None
Comment: PQ1 unused
PQ2 0000000B

Symbol: PQ2
   Definitions
      At line 17 in file main.s
   Uses
      None
Comment: PQ2 unused
PQ3 0000000F

Symbol: PQ3
   Definitions
      At line 18 in file main.s
   Uses
      None
Comment: PQ3 unused
PQ4 00000006

Symbol: PQ4
   Definitions
      At line 19 in file main.s
   Uses



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols

      None
Comment: PQ4 unused
PQ5 0000000D

Symbol: PQ5
   Definitions
      At line 20 in file main.s
   Uses
      None
Comment: PQ5 unused
PQ6 0000000D

Symbol: PQ6
   Definitions
      At line 21 in file main.s
   Uses
      None
Comment: PQ6 unused
PQ7 00000007

Symbol: PQ7
   Definitions
      At line 22 in file main.s
   Uses
      None
Comment: PQ7 unused
PQ8 0000000F

Symbol: PQ8
   Definitions
      At line 23 in file main.s
   Uses
      None
Comment: PQ8 unused
PQ9 0000000F

Symbol: PQ9
   Definitions
      At line 24 in file main.s
   Uses
      None
Comment: PQ9 unused
20 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

GPIO_Init 00000000

Symbol: GPIO_Init
   Definitions
      At line 64 in file main.s
   Uses
      At line 77 in file main.s
Comment: GPIO_Init used once
PLL_Init 00000000

Symbol: PLL_Init
   Definitions
      At line 61 in file main.s
   Uses
      At line 75 in file main.s
Comment: PLL_Init used once
PortB_Output 00000000

Symbol: PortB_Output
   Definitions
      At line 67 in file main.s
   Uses
      None
Comment: PortB_Output unused
PortJ_Input 00000000

Symbol: PortJ_Input
   Definitions
      At line 69 in file main.s
   Uses
      None
Comment: PortJ_Input unused
PortK_Output 00000000

Symbol: PortK_Output
   Definitions
      At line 65 in file main.s
   Uses
      At line 123 in file main.s
      At line 144 in file main.s

PortM_Output 00000000

Symbol: PortM_Output
   Definitions
      At line 68 in file main.s
   Uses
      At line 94 in file main.s
      At line 126 in file main.s
      At line 131 in file main.s
      At line 147 in file main.s
      At line 152 in file main.s

PortQ_Output 00000000

Symbol: PortQ_Output
   Definitions
      At line 66 in file main.s
   Uses



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
External symbols

      None
Comment: PortQ_Output unused
SysTick_Init 00000000

Symbol: SysTick_Init
   Definitions
      At line 62 in file main.s
   Uses
      At line 76 in file main.s
Comment: SysTick_Init used once
SysTick_Wait1ms 00000000

Symbol: SysTick_Wait1ms
   Definitions
      At line 63 in file main.s
   Uses
      At line 91 in file main.s
      At line 128 in file main.s
      At line 149 in file main.s

9 symbols
370 symbols in table
